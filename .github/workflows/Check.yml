name: Check CI

on:
  push:
    branches:
      - master
      - release
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  spotless:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Check Spotless
        run: ./gradlew spotlessCheck --stacktrace

  api-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Check API
        run: ./gradlew apiCheck --stacktrace

  lint:
    needs: [spotless, api-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Lint
        run: ./gradlew lint --stacktrace

  test:
    needs: [spotless, api-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Test
        run: ./gradlew test --stacktrace

      - name: Upload build reports
        uses: actions/upload-artifact@v4
        with:
          name: build-reports
          path: '**/build/reports'

  assemble:
    needs: [spotless, api-check]
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Assemble
        run: |
          ./gradlew kotlinUpgradeYarnLock \
            :image-loader:assemble \
            :extension:imageio:assemble \
            :extension:moko-resources:assemble \
            --stacktrace -PnoAppApple \
            -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect"

  build:
    needs: [spotless, api-check]
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Build
        run: |
          ./gradlew kotlinUpgradeYarnLock \
            :image-loader:build \
            :extension:imageio:build \
            :extension:moko-resources:build \
            --stacktrace -PnoAppApple \
            -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect"
